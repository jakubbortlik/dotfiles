#!/bin/bash - 
#===============================================================================
#
#          FILE: tilter
# 
#         USAGE: tilter
# 
#   DESCRIPTION: tilter = Text fILTER
# 
#       OPTIONS: ---
#  REQUIREMENTS: ---
#          BUGS: ---
#         NOTES: ---
#        AUTHOR: Jakub Bortlik, jakub.bortlik@gmail.com
#  ORGANIZATION: 
#       CREATED: 04/26/2018 15:07
#      REVISION:  ---
#===============================================================================

set -o nounset                              # Treat unset variables as an error

E_XCD=86							# Can't change directory?
startdir=~/zdroje/nccc
cd "$startdir"

# Doublecheck if in the right directory
if [ "$(pwd)" != "$startdir" ]				# Not in ~/zdroje/nccc
then
  echo "Can't change to $startdir."
  exit $E_XCD
fi

echo "all	consonants	vowels	percentage" > $startdir/initial_vowels.tsv

# for i in {05..07} {09..13} {15..26}
for i in 05
do
	path="./session_${i}"

	for j in {1..3}
	do
		dir="${path}/speaker_${j}"
		echo "processing folder: $dir"

		# filter the .eaf files:
		f=$(find ${dir} -maxdepth 1 -type f -iname "*.eaf")
		f_new="${f%%.eaf}_eaf.sent"
		sed -E '
			/ANNOTATION_VALUE/!d		# keep only lines which contain the text ANNOTATION_VALUE
			s:</?ANNOTATION_VALUE>::g	# remove the text <ANNOTATION_VALUE> and </ANNOTATION_VALUE>
			s/(\S)(&amp;)/\1 \2/g       # add a space in front of "&amp;"
			#
			s/,(\S)/, \1/g				# add a space after a comma
			s/\s,/,/g					# remove spaces before commas
			s/\.(\S)/. \1/g				# add a space after full stops
			s/\s\././g					# remove spaces before full stops
			s/^\s+//					# remove blanks at beginnings of lines
			s/\s+$//					# remove blanks at ends of lines
			# /^\[(\S)+\]$/d			# remove lines which contain only a [...]
			s/\[-/[/g					# remove - inside brackets
			s/-\]/]/g					# remove - inside brackets
			s/\s\s+/ /g' < "${f}" > "${f_new}"		# replace multiple spaces with just one
		# echo "${f} filtered to ${f_new}"

		# get individual words from the eaf files
		f=$(find ${dir} -maxdepth 1 -type f -iname "*_eaf.sent")
		f_new="${f%%.sent}.words"
		sed -E '
			s/ ?[.,?]//g					# remove punctuation
			# s/ ?&amp;[a-z]+//g				# remove &amp;XXX
			# s/ ?\[\S*\]//g					# remove [xxx]
			# s/^ +//g					# replace multiple spaces with just one space
			/^$/d						# remove blank lines
			# replace spaces with newlines
			s/ +/\
/g
			1{/spk/d}					# remove the first line if it contains the word spk
			2{/report/d}				# remove the last line if it contains the word report
			${/report/d}				# remove the last line if it contains the word report
		' < "${f}" > "${f_new}"
		# echo "${f} filtered to ${f_new}"

		# # filter the .textgrid.bin files:
		# f=$(find ${dir} -maxdepth 1 -type f -iname "*textgrid.bin")
		# f_new="${f%%.textgrid.bin}_grid.sent"
		# sed -E '
		# 	/text = /!d					# keep only lines with text
		# 	/text = "" /d
		# 	s/\s+text = "//g			# remove the "text = "
		# 	s/ ?" //
		# 	# s/""/""\r/				# replace dos EOL with unix EOL
		# 	s/("")([^"]+)("")/ [\2] /g	# transform to the same format as the .eaf
		# 	#
		# 	s/,(\S)/, \1/g				# add a space after a comma
		# 	s/ +,/,/g					# remove spaces before commas
		# 	s/\.(\S)/. \1/g				# add spaces after full stops
		# 	s/\s+\././g					# remove spaces before full stops
		# 	s/^\s+//					# remove blanks at beginnings of lines
		# 	s/\s+$//					# remove blanks at ends of lines
		# 	s/\s\s+/ /g' < "${f}" > "${f_new}" # replace multiple spaces with just one
		# # echo "${f}" filtered to "${f_new}"

		# get individual words from the eaf files
		f=$(find ${dir} -maxdepth 1 -type f -iname "*_eaf.sent")
		f_new="${f%%.sent}.words"
		sed -E '
			s/ ?[.,?]//g					# remove punctuation
			s/\$//g
			# s/ ?&amp;[a-z]+//g				# remove &amp;XXX
			# s/ ?\[\S*\]//g					# remove [xxx]
			# s/^ +//g					# replace multiple spaces with just one space
			/^$/d						# remove blank lines
			# replace spaces with newlines
			s/ +/\
/g
			1{/spk/d}					# remove the first line if it contains the word spk
			2{/report/d}				# remove the last line if it contains the word report
			${/report/d}				# remove the last line if it contains the word report
		' < "${f}" > "${f_new}"
		# echo "${f} filtered to ${f_new}"

		# get only words starting with vowel letters
		f=$(find ${dir} -maxdepth 1 -type f -iname "*_eaf.words")
		f_new="${f%%.words}.wordsv"
		sed -E '
			# remove words which do not begin with a vowel
			/^[aeiouáéíóúůý]/I !d' < "${f}" > "${f_new}"
		# echo "${f} filtered to ${f_new}"

		# get only words starting with consonant letters
		f=$(find ${dir} -maxdepth 1 -type f -iname "*_eaf.words")
		f_new="${f%%.words}.wordsc"
		sed -E '
			# remove words which do not begin with a vowel
			/^[bcčćdďfghjklľĺmnňńpqrřsšśtťvwxyzžź]/I !d' < "${f}" > "${f_new}"
		# echo "${f} filtered to ${f_new}"

		# get only initial vowel letters
		f=$(find ${dir} -maxdepth 1 -type f -iname "*_eaf.wordsv")
		f_new="${f%%.wordsv}.vowels"
		sed -E '
			# remove words which do not begin with a vowel
			s/(^.)(.*)/\1/' < "${f}" > "${f_new}"
		# echo "${f} filtered to ${f_new}"

		# get only initial consonant letters
		f=$(find ${dir} -maxdepth 1 -type f -iname "*_eaf.wordsc")
		f_new="${f%%.wordsc}.consonants"
		sed -E '
			# remove words which do not begin with a vowel
			s/(^.)(.*)/\1/' < "${f}" > "${f_new}"
		# echo "${f} filtered to ${f_new}"

		# get counts of initial vowels:
		f=$(find ${dir} -maxdepth 1 -type f -iname "*_eaf.vowels")
		f_new="${f%%.vowels}.vowelcounts"
		sort $f | uniq -i -c | sort -rn > $f_new
		# echo unique vowel-initial words filtered to $f_new

		# get counts of consonants at beginnings of words:
		f=$(find ${dir} -maxdepth 1 -type f -iname "*_eaf.consonants")
		f_new="${f%%.consonants}.consonantcounts"
		sort $f | uniq -i -c | sort -rn > $f_new
		# echo unique vowel-initial words filtered to $f_new

		# get only initial letters:
		f=$(find ${dir} -maxdepth 1 -type f -iname "*_eaf.words")
		f_new="${dir}/letters.txt"
		sed -E '
			# Remove lines starting with &amp;, [, and (
			/^&amp;/d
			/^\[/d
			/^\(/d
			s/(^.)(.*)/\1/' < "${f}" > "./tmp.tmp"
		sort ./tmp.tmp | uniq -i > "${f_new}"
		rm ./tmp.tmp
		# echo "${f} filtered to ${f_new}"

		# get counts of vowels at beginnings of words:
		f=$(find ${dir} -maxdepth 1 -type f -iname "*_eaf.wordsv")
		f_new="${f%%.wordsv}.wordsvcounts"
		nvowels=$(wc -l $f | cut -d ' ' -f 1)
		sort $f | uniq -i -c | sort -rn > $f_new
		# echo unique vowel-initial words filtered to $f_new

		# get counts of consonants at beginnings of words:
		f=$(find ${dir} -maxdepth 1 -type f -iname "*_eaf.wordsc")
		f_new="${f%%.wordsc}.wordsccount"
		nconsonants=$(wc -l $f | cut -d ' ' -f 1)
		sort $f | uniq -i -c | sort -rn > $f_new
		# echo unique vowel-initial words filtered to $f_new

		let "all = $nvowels + $nconsonants"
		let "percent = $nvowels / ($all / 100)"
		echo "$all	$nconsonants	$nvowels	$percent" >> ${startdir}/initial_vowels.tsv
		# echo words beginning with vowels make up $percent \% of all the words
	done
done

exit

# # /^\[[^s]+\]$/d				# remove lines which only contain a [...]
# # /^&amp;\<[a-z]+\>[.,;]?$/d' < "${f}" > "${f_new}"

	# # /^[aeiouyAEIOUYáéíóúůýÁÉÍÓÚŮý]/!d' < "${f}" > "${f_new}"
